plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven { url 'https://maven.aliyun.com/nexus/content/groups/public' }
    maven { url 'https://maven.aliyun.com/repository/google' }
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.huaweicloud.com/repository/maven' }
}

allprojects {
    // 配置项目信息
    group = 'com.zervice'
    version = '1.0'

    // 配置字符编码
    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
    }

    java {
        sourceCompatibility = '21'
        targetCompatibility = '21'
    }

    //仓库配置
    repositories {
        //本地
        mavenLocal()
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://repo.huaweicloud.com/repository/maven' }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'idea'
    //所有子模块都是springboot项目，如不是，不能打包。
//    apply plugin: 'org.springframework.boot'

    apply plugin: 'io.spring.dependency-management'

    //所有子模块的-依赖版本管理
//    dependencyManagement {
//        dependencies {
//            dependency 'cn.hutool:hutool-all:5.0.7'
//            dependency "org.apache.commons:commons-lang3:3.5"
//        }
//    }

    //使用 gradle打包工具
    jar {
        manifest.attributes provider: 'gradle'
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-web'

        implementation 'com.alibaba:fastjson:2.0.50'

        annotationProcessor 'org.projectlombok:lombok:1.18.30'
        compileOnly 'org.projectlombok:lombok:1.18.30'

        implementation 'com.google.guava:guava:32.1.3-jre'
        implementation 'org.apache.commons:commons-collections4:4.4'
        implementation 'commons-validator:commons-validator:1.8.0'
        implementation 'commons-codec:commons-codec:1.16.0'
        implementation 'org.apache.commons:commons-exec:1.3'

        // 升级 log4j 到更新的版本
        implementation 'org.apache.logging.log4j:log4j-core:2.24.3'
        implementation 'org.apache.logging.log4j:log4j-api:2.24.3'
        implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.24.3'
        implementation 'org.apache.logging.log4j:log4j-jul:2.24.3'

        implementation 'org.apache.commons:commons-pool2:2.12.0'
        implementation 'org.apache.commons:commons-lang3:3.14.0'

        implementation 'com.sleepycat:je:5.0.73'

        // 升级 mapstruct 到更新的版本
        implementation 'org.mapstruct:mapstruct:1.5.5.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

        // 更新其他依赖
        implementation 'org.glassfish.jersey.core:jersey-common:3.1.5'
        implementation 'com.auth0:java-jwt:4.4.0'
        implementation 'com.github.whvcse:easy-captcha:1.6.2'
        implementation 'org.apache.poi:poi-ooxml:5.2.5'
        implementation 'cn.hutool:hutool-all:5.8.25'
        implementation 'io.dropwizard.metrics:metrics-core:4.2.25'
        implementation 'io.dropwizard.metrics:metrics-jmx:4.2.25'

        // https://mvnrepository.com/artifact/com.google.code.gson/gson
        implementation 'com.google.code.gson:gson:2.12.1'

        /* mail */
        implementation 'com.sun.mail:javax.mail:1.6.2'
        implementation 'io.pebbletemplates:pebble:3.1.4'

    }

    configurations {
        all*.exclude module: 'spring-boot-starter-logging'
        all*.exclude module: 'logback-classic'
        all*.exclude module: 'log4j-over-slf4j'
    }

    sourceCompatibility = JavaVersion.VERSION_21

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}